###################################################################################################
# Job de Backup do Próprio Diretor
Job {
  Name = "Backup_Servidor_Bacula"
  JobDefs = "Backup_Padrao"
  Client  = srv_bacula-fd
  FileSet = "FileSet_SRV_Bacula"
  Priority = 10
}

########################################################################################
# Backup do Catálogo
Job {
  Name = "Backup_Catalogo"
  JobDefs = "Backup_Padrao"
  Level = Full
  FileSet= "FileSet_Catalogo"
  Schedule = "Agenda_GFS_Noite"
 #RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
  RunAfterJob  = "/etc/bacula/scripts/_delete_bootstrap_files"
  RunScript {
    Console = "update stats"
    Console = "prune stats yes"
    RunsWhen = After
    Runs OnClient = no
  }
  Write Bootstrap = "/etc/bacula/bootstrap/%j_%l_%i_%c.bsr"
  Priority = 99
}

########################################################################################
# Backup de Arquivos Bootstrap
Job {
  Name = "Backup_Arquivos_Bootstrap"
  JobDefs = "Backup_Padrao"
  Level = Full
  FileSet= "FileSet_Arquivos_Bootstrap"
  Schedule = "Agenda_GFS_Noite"
  RunAfterJob  = "/etc/bacula/scripts/_delete_bootstrap_files"
  Write Bootstrap = "/etc/bacula/bootstrap/%j_%l_%i_%c.bsr"
  Priority = 99
}

########################################################################################
# Job Padrão de Restauração dos Dados
Job {
  Name = "Restore_Files"
  Type = Restore
  Client = srv_bacula-fd
  FileSet= "FileSet_SRV_Bacula"
  Storage = "StorageLocal1"
  Pool = "Pool-Default"
  Messages = Standard
  Where = "/bacula_restore"
  Enabled = no
  Write Bootstrap = "/etc/bacula/bootstrap/%i_%c.bsr"
}


###################################################################################################
# Job de Migracao
Job{
  Name = "Migracao_Backup"
  Type = Migrate
  JobDefs = "Backup_Padrao"
  Client  = srv_bacula-fd
  FileSet = "FileSet_SRV_Bacula"
  Pool = "Diaria"
  NextPool = "Pool-Temp"
  Selection Type = SqlQuery
  Selection Pattern = "select distinct JobId from JobMedia where MediaId in (select MediaId from Media where VolumeName like 'Volume-Temporario-%');"
  Purge Migration Job = yes
  Enabled = no
}

###################################################################################################
# Job de Verificação VolumeToCatalog
Job{
  Name = "Verify_VolumeToCatalog"
  Type = Verify
  Level = VolumeToCatalog
  JobDefs = "Backup_Padrao"
  Enabled = no
}


###################################################################################################
# Job de Verificação DiskToCatalog
Job{
  Name = "Verify_DiskToCatalog"
  Type = Verify
  Level = DiskToCatalog
  JobDefs = "Backup_Padrao"
  Enabled = no
}


###################################################################################################
# Job de Verificação Data
Job{
  Name = "Verify_Data"
  Type = Verify
  Level = Data
  JobDefs = "Backup_Padrao"
  Enabled = no
}


###################################################################################################
# Job de Verificação InitCatalog
Job{
  Name = "Verify_InitCatalog"
  Type = Verify
  Level = InitCatalog
  JobDefs = "Backup_Padrao"
  Enabled = no
}


###################################################################################################
# Job de Verificação Catalog
Job{
  Name = "Verify_Catalog"
  Type = Verify
  Level = Catalog
  JobDefs = "Backup_Padrao"
  Enabled = no
}
